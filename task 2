import socket
import requests

def scan_ports(host, ports):
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        socket.setdefaulttimeout(1)
        result = sock.connect_ex((host, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def check_outdated_software(host):
    try:
        response = requests.get(f"http://{host}")
        server_header = response.headers.get('Server')
        if server_header:
            print(f"Server Software: {server_header}")
            # Add more checks for specific software versions and known vulnerabilities
            if "Apache" in server_header:
                version = server_header.split(" ")[1]
                if version < "2.4.48":  # Example version check for Apache
                    print(f"Outdated Apache version detected: {version}")
            elif "nginx" in server_header:
                version = server_header.split("/")[1]
                if version < "1.21.1":  # Example version check for Nginx
                    print(f"Outdated Nginx version detected: {version}")
        else:
            print("No Server header found in HTTP response.")
    except requests.RequestException as e:
        print(f"Error checking software version: {e}")

def main():
    host = "example.com"  # Replace with the target host
    common_ports = [21, 22, 23, 25, 80, 110, 143, 443, 445, 3389]

    print(f"Scanning {host} for open ports...")
    open_ports = scan_ports(host, common_ports)
    if open_ports:
        print(f"Open ports: {open_ports}")
    else:
        print("No open ports found.")

    print(f"\nChecking {host} for outdated software versions...")
    check_outdated_software(host)

if __name__ == "__main__":
    main()
